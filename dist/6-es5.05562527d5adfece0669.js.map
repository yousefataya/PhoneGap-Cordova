{"version":3,"sources":["src/app/components/base/base.component.ts","src/app/components/file/file.component.html","src/app/components/file/file.component.ts","src/app/components/file/file.module.ts","src/app/models/file/file.model.ts","src/app/models/file/file.upload.model.ts","src/app/services/file.service.ts","src/app/views/main/files/files.component.html","src/app/views/main/files/files.component.ts","src/app/views/main/files/files.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Input } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n\r\nexport abstract class AppBaseComponent<TValue> implements ControlValueAccessor {\r\n    @Input() autofocus = false;\r\n    @Input() class = '';\r\n    @Input() disabled = false;\r\n    @Input() formControlName!: string;\r\n    @Input() required = false;\r\n    @Input() text = '';\r\n\r\n    private onChange!: (value: TValue) => void;\r\n\r\n    private VALUE!: TValue;\r\n\r\n    get value(): TValue {\r\n        return this.VALUE;\r\n    }\r\n\r\n    set value(value: TValue) {\r\n        if (this.value === value) { return; }\r\n\r\n        this.VALUE = value;\r\n\r\n        if (this.onChange) {\r\n            this.onChange(value);\r\n        }\r\n    }\r\n\r\n    registerOnChange(onChange: (value: TValue) => void) {\r\n        this.onChange = onChange;\r\n    }\r\n\r\n    // tslint:disable-next-line: no-empty\r\n    registerOnTouched(_: () => void) { }\r\n\r\n    writeValue(value: TValue) {\r\n        this.value = value;\r\n    }\r\n}\r\n","<div class='js-upload uk-padding-small uk-padding-remove-left' uk-form-custom>\r\n    <input type='file' multiple #input [disabled]='disabled' [id]='formControlName' [name]='formControlName' [required]='required' (change)='change(input.files)'>\r\n    <button class='uk-button uk-button-default' type='button' tabindex='-1'>Select</button>\r\n</div>\r\n\r\n<div>\r\n    <ul class='uk-list uk-list-bullet'>\r\n        <li *ngFor='let upload of uploads' class='uk-text-warning'>{{ upload.id }}: {{ upload.progress }}%</li>\r\n        <li *ngFor='let file of value' class='uk-text-success'>{{ file.name }}</li>\r\n    </ul>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { FileModel } from 'src/app/models/file/file.model';\r\nimport { FileUploadModel } from 'src/app/models/file/file.upload.model';\r\nimport { AppFileService } from 'src/app/services/file.service';\r\nimport { AppBaseComponent } from '../base/base.component';\r\n\r\n@Component({\r\n    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: AppFileComponent, multi: true }],\r\n    selector: 'app-file',\r\n    templateUrl: './file.component.html'\r\n})\r\nexport class AppFileComponent extends AppBaseComponent<FileModel[]> {\r\n    constructor(private readonly appFileService: AppFileService) {\r\n        super();\r\n    }\r\n\r\n    uploads = new Array<FileUploadModel>();\r\n\r\n    change(files: FileList) {\r\n        for (let index = 0; index < files.length; index++) {\r\n            const file = files.item(index) as File;\r\n            const upload = new FileUploadModel(file.name, 0);\r\n            this.uploads.push(upload);\r\n\r\n            this.appFileService.upload(file).subscribe((result: FileUploadModel) => {\r\n                upload.progress = result.progress;\r\n\r\n                if (result.id) {\r\n                    this.value.push(new FileModel(result.id, file.name));\r\n                    this.uploads = this.uploads.filter((x) => x.progress < 100);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppFileComponent } from './file.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppFileComponent\r\n    ],\r\n    exports: [\r\n        AppFileComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ]\r\n})\r\nexport class AppFileModule { }\r\n","export class FileModel {\r\n    constructor(public id: string, public name: string) { }\r\n}\r\n","export class FileUploadModel {\r\n    constructor(public id: string, public progress: number) { }\r\n}\r\n","import { HttpClient, HttpEventType, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FileUploadModel } from '../models/file/file.upload.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppFileService {\r\n    constructor(private readonly http: HttpClient) { }\r\n\r\n    upload(file: File): Observable<FileUploadModel> {\r\n        const formData = new FormData();\r\n        formData.append(file.name, file);\r\n\r\n        const request = new HttpRequest('POST', 'Files', formData, { reportProgress: true, });\r\n\r\n        return new Observable((observable: any) => {\r\n            this.http.request(request).subscribe((event: any) => {\r\n                if (event.type === HttpEventType.Response) {\r\n                    return observable.next(new FileUploadModel(event.body[0].id, 100));\r\n                }\r\n\r\n                if (event.type === HttpEventType.UploadProgress && event.total) {\r\n                    const progress = Math.round(100 * event.loaded / event.total);\r\n                    return observable.next(new FileUploadModel('', progress));\r\n                }\r\n\r\n                return observable.next(new FileUploadModel('', 0));\r\n            });\r\n        });\r\n    }\r\n}\r\n","<h2>Files</h2>\r\n\r\n<app-file name=\"files\" [(ngModel)]=\"files\"></app-file>\r\n\r\n<div class=\"uk-padding-remove\">\r\n    <h3>Files</h3>\r\n\r\n    <ul class=\"uk-list uk-list-bullet\">\r\n        <li *ngFor=\"let file of files\">{{ file | json }}</li>\r\n    </ul>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { FileModel } from \"src/app/models/file/file.model\";\r\n\r\n@Component({ selector: \"app-files\", templateUrl: \"./files.component.html\" })\r\nexport class AppFilesComponent {\r\n    files = new Array<FileModel>();\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AppFileModule } from \"src/app/components/file/file.module\";\r\nimport { AppFilesComponent } from \"./files.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: AppFilesComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [AppFilesComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        RouterModule.forChild(routes),\r\n        AppFileModule\r\n    ]\r\n})\r\nexport class AppFilesModule { }\r\n"],"sourceRoot":"webpack:///","file":"6-es5.05562527d5adfece0669.js"}