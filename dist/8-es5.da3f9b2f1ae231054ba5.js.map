{"version":3,"sources":["src/app/views/main/rxjs/rxjs.component.html","src/app/views/main/rxjs/rxjs.component.ts","src/app/views/main/rxjs/rxjs.module.ts","src/app/views/main/rxjs/rxjs.service.ts"],"names":[],"mappings":"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","sourcesContent":["<h2>Rxjs</h2>\r\n\r\n<div uk-grid>\r\n    <div class=\"uk-width-1-1 uk-width-1-2@s uk-width-1-3@m uk-width-1-4@l\" *ngFor=\"let user of users\">\r\n        <pre>{{ user | json }}</pre>\r\n    </div>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { User } from \"./models/user.model\";\r\nimport { RxjsService } from \"./rxjs.service\";\r\n\r\n@Component({ selector: \"app-rxjs\", templateUrl: \"./rxjs.component.html\" })\r\nexport class AppRxjsComponent {\r\n    users!: User[];\r\n\r\n    constructor(private readonly rxjsService: RxjsService) {\r\n        this.rxjsService.getUsersCitiesCompanies().subscribe((users: User[]) => {\r\n            this.users = users;\r\n        });\r\n    }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AppRxjsComponent } from \"./rxjs.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: AppRxjsComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [AppRxjsComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes)\r\n    ]\r\n})\r\nexport class AppRxjsModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { forkJoin, from, Observable, of } from \"rxjs\";\r\nimport { map, mergeMap, switchMap, tap, toArray } from \"rxjs/operators\";\r\nimport { UserCity } from \"./models/user.city.model\";\r\nimport { UserCompany } from \"./models/user.company.model\";\r\nimport { User } from \"./models/user.model\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RxjsService {\r\n    getUsersCitiesCompanies(): Observable<User[]> {\r\n        return this.getUsers().pipe(\r\n            switchMap((users) => from(users)),\r\n            mergeMap((user) =>\r\n                forkJoin([\r\n                    this.getUsersCities(user.userId as number),\r\n                    this.getUsersCompanies(user.userId as number)\r\n                ]).pipe(\r\n                    map((data) => ({ user, cities: data[0], companies: data[1] })),\r\n                    tap((data) => data.user.cities = data.cities),\r\n                    tap((data) => data.user.companies = data.companies),\r\n                    map((data) => data.user)\r\n                )\r\n            ),\r\n            toArray()\r\n        );\r\n    }\r\n\r\n    private getUsers(): Observable<User[]> {\r\n        const list = [\r\n            { userId: 1, name: \"Name 1\" },\r\n            { userId: 2, name: \"Name 2\" }\r\n        ];\r\n\r\n        return of(list as User[]);\r\n    }\r\n\r\n    private getUsersCities(userId: number): Observable<UserCity[]> {\r\n        let list = [\r\n            { userId: 1, name: \"City 1\" },\r\n            { userId: 2, name: \"City 2\" }\r\n        ];\r\n\r\n        list = list.filter((user) => user.userId === userId);\r\n\r\n        return of(list);\r\n    }\r\n\r\n    private getUsersCompanies(userId: number): Observable<UserCompany[]> {\r\n        let list = [\r\n            { userId: 1, name: \"Company 1\" },\r\n            { userId: 2, name: \"Company 2\" }\r\n        ];\r\n\r\n        list = list.filter((user) => user.userId === userId);\r\n\r\n        return of(list);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"8-es5.da3f9b2f1ae231054ba5.js"}