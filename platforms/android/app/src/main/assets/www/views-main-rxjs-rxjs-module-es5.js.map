{"version":3,"sources":["src/app/views/main/rxjs/rxjs.component.html","src/app/views/main/rxjs/rxjs.component.ts","src/app/views/main/rxjs/rxjs.module.ts","src/app/views/main/rxjs/rxjs.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h2>Rxjs</h2>\\r\\n\\r\\n<div uk-grid>\\r\\n    <div class=\\\"uk-width-1-1 uk-width-1-2@s uk-width-1-3@m uk-width-1-4@l\\\" *ngFor=\\\"let user of users\\\">\\r\\n        <pre>{{ user | json }}</pre>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { User } from \"./models/user.model\";\r\nimport { RxjsService } from \"./rxjs.service\";\r\n\r\n@Component({ selector: \"app-rxjs\", templateUrl: \"./rxjs.component.html\" })\r\nexport class AppRxjsComponent {\r\n    users!: User[];\r\n\r\n    constructor(private readonly rxjsService: RxjsService) {\r\n        this.rxjsService.getUsersCitiesCompanies().subscribe((users: User[]) => {\r\n            this.users = users;\r\n        });\r\n    }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AppRxjsComponent } from \"./rxjs.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: AppRxjsComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [AppRxjsComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes)\r\n    ]\r\n})\r\nexport class AppRxjsModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { forkJoin, from, Observable, of } from \"rxjs\";\r\nimport { map, mergeMap, switchMap, tap, toArray } from \"rxjs/operators\";\r\nimport { UserCity } from \"./models/user.city.model\";\r\nimport { UserCompany } from \"./models/user.company.model\";\r\nimport { User } from \"./models/user.model\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RxjsService {\r\n    getUsersCitiesCompanies(): Observable<User[]> {\r\n        return this.getUsers().pipe(\r\n            switchMap((users) => from(users)),\r\n            mergeMap((user) =>\r\n                forkJoin([\r\n                    this.getUsersCities(user.userId as number),\r\n                    this.getUsersCompanies(user.userId as number)\r\n                ]).pipe(\r\n                    map((data) => ({ user, cities: data[0], companies: data[1] })),\r\n                    tap((data) => data.user.cities = data.cities),\r\n                    tap((data) => data.user.companies = data.companies),\r\n                    map((data) => data.user)\r\n                )\r\n            ),\r\n            toArray()\r\n        );\r\n    }\r\n\r\n    private getUsers(): Observable<User[]> {\r\n        const list = [\r\n            { userId: 1, name: \"Name 1\" },\r\n            { userId: 2, name: \"Name 2\" }\r\n        ];\r\n\r\n        return of(list as User[]);\r\n    }\r\n\r\n    private getUsersCities(userId: number): Observable<UserCity[]> {\r\n        let list = [\r\n            { userId: 1, name: \"City 1\" },\r\n            { userId: 2, name: \"City 2\" }\r\n        ];\r\n\r\n        list = list.filter((user) => user.userId === userId);\r\n\r\n        return of(list);\r\n    }\r\n\r\n    private getUsersCompanies(userId: number): Observable<UserCompany[]> {\r\n        let list = [\r\n            { userId: 1, name: \"Company 1\" },\r\n            { userId: 2, name: \"Company 2\" }\r\n        ];\r\n\r\n        list = list.filter((user) => user.userId === userId);\r\n\r\n        return of(list);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"views-main-rxjs-rxjs-module-es5.js"}