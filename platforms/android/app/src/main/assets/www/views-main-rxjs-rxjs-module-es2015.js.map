{"version":3,"sources":["./src/app/views/main/rxjs/rxjs.component.html","./src/app/views/main/rxjs/rxjs.component.ts","./src/app/views/main/rxjs/rxjs.module.ts","./src/app/views/main/rxjs/rxjs.service.ts"],"names":[],"mappings":"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","file":"views-main-rxjs-rxjs-module-es2015.js","sourcesContent":["export default \"<h2>Rxjs</h2>\\r\\n\\r\\n<div uk-grid>\\r\\n    <div class=\\\"uk-width-1-1 uk-width-1-2@s uk-width-1-3@m uk-width-1-4@l\\\" *ngFor=\\\"let user of users\\\">\\r\\n        <pre>{{ user | json }}</pre>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { User } from \"./models/user.model\";\r\nimport { RxjsService } from \"./rxjs.service\";\r\n\r\n@Component({ selector: \"app-rxjs\", templateUrl: \"./rxjs.component.html\" })\r\nexport class AppRxjsComponent {\r\n    users!: User[];\r\n\r\n    constructor(private readonly rxjsService: RxjsService) {\r\n        this.rxjsService.getUsersCitiesCompanies().subscribe((users: User[]) => {\r\n            this.users = users;\r\n        });\r\n    }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AppRxjsComponent } from \"./rxjs.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: AppRxjsComponent }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [AppRxjsComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes)\r\n    ]\r\n})\r\nexport class AppRxjsModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { forkJoin, from, Observable, of } from \"rxjs\";\r\nimport { map, mergeMap, switchMap, tap, toArray } from \"rxjs/operators\";\r\nimport { UserCity } from \"./models/user.city.model\";\r\nimport { UserCompany } from \"./models/user.company.model\";\r\nimport { User } from \"./models/user.model\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class RxjsService {\r\n    getUsersCitiesCompanies(): Observable<User[]> {\r\n        return this.getUsers().pipe(\r\n            switchMap((users) => from(users)),\r\n            mergeMap((user) =>\r\n                forkJoin([\r\n                    this.getUsersCities(user.userId as number),\r\n                    this.getUsersCompanies(user.userId as number)\r\n                ]).pipe(\r\n                    map((data) => ({ user, cities: data[0], companies: data[1] })),\r\n                    tap((data) => data.user.cities = data.cities),\r\n                    tap((data) => data.user.companies = data.companies),\r\n                    map((data) => data.user)\r\n                )\r\n            ),\r\n            toArray()\r\n        );\r\n    }\r\n\r\n    private getUsers(): Observable<User[]> {\r\n        const list = [\r\n            { userId: 1, name: \"Name 1\" },\r\n            { userId: 2, name: \"Name 2\" }\r\n        ];\r\n\r\n        return of(list as User[]);\r\n    }\r\n\r\n    private getUsersCities(userId: number): Observable<UserCity[]> {\r\n        let list = [\r\n            { userId: 1, name: \"City 1\" },\r\n            { userId: 2, name: \"City 2\" }\r\n        ];\r\n\r\n        list = list.filter((user) => user.userId === userId);\r\n\r\n        return of(list);\r\n    }\r\n\r\n    private getUsersCompanies(userId: number): Observable<UserCompany[]> {\r\n        let list = [\r\n            { userId: 1, name: \"Company 1\" },\r\n            { userId: 2, name: \"Company 2\" }\r\n        ];\r\n\r\n        list = list.filter((user) => user.userId === userId);\r\n\r\n        return of(list);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}